The ``2-matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

This is an example text file in reStructuredText format.  First import
``matrix_divided`` from the ``2-matrix_divided`` module:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided


Now use it:

    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
    >>> print(matrix)
    [[1, 2, 3], [4, 5, 6]]
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> try:
    ...     print(matrix_divided(matrix, 0))
    ... except Exception as e:
    ...     print(e)
    division by zero
    >>> matrix = [[1, 2, 3], [4, 5.5, 6]]
    >>> try:
    ...    print(matrix_divided(matrix, 3))
    ... except Exception as e:
    ...    print(e)
    [[0.33, 0.67, 1.0], [1.33, 1.83, 2.0]]
    >>> matrix = "str"
    >>> try:
    ...     print(matrix_divided(matrix, 3))
    ... except Exception as e:
    ...     print(e)
    matrix must be a matrix (list of lists) of integers/floats
    >>> matrix = [[1, 2, 3], [1, None, 3]]
    >>> try:
    ...     print(matrix_divided(matrix, 3))
    ... except Exception as e:
    ...     print(e)
    matrix must be a matrix (list of lists) of integers/floats
    >>> matrix = None
    >>> try:
    ...     print(matrix_divided(matrix, 3))
    ... except Exception as e:
    ...     print(e)
    matrix must be a matrix (list of lists) of integers/floats
    >>> matrix = [[1, "str", 3], [4, 5, 6]]
    >>> try:
    ...      print(matrix_divided(matrix, 3))
    ... except Exception as e:
    ...      print(e)
    matrix must be a matrix (list of lists) of integers/floats
    >>> matrix = [[1, 2, 3], [4, 5, 6, 7]]
    >>> try:
    ...     print(matrix_divided(matrix, 3))
    ... except Exception as e:
    ...     print(e)
    Each row of the matrix must have the same size
    >>> matrix = [1, 2, 3]
    >>> try:
    ...     print(matrix_divided(matrix, 3))
    ... except Exception as e:
    ...     print(e)
    matrix must be a matrix (list of lists) of integers/floats
    >>> matrix = None
    >>> try:
    ...     print(matrix_divided(matrix, 3))
    ... except Exception as e:
    ...     print(e)
    matrix must be a matrix (list of lists) of integers/floats
    >>> matrix = 3
    >>> try:
    ...     print(matrix_divided(matrix, 3))
    ... except Exception as e:
    ...     print(e)
    matrix must be a matrix (list of lists) of integers/floats
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> print(matrix_divided(matrix, 3.00000000000000000000000000000000000001))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> try:
    ...     print(matrix_divided(matrix, "str"))
    ... except Exception as e:
    ...     print(e)
    div must be a number
